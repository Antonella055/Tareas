/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;


import Estructuras.List;
import Objetos.Partida;
import java.awt.Graphics;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import pokemonpikachu.Musica;


/**
 *
 * @author Antonella
 */
public class PokemonsAlmacenados extends javax.swing.JFrame {


    /**
     * Creates new form PokemonsInfo
     */
    public PokemonsAlmacenados() {
        initComponents();
        //Estado
       rellenarPokemos();
      
        
         new Thread(() -> {
            new Musica().Reproducir("src/Sonidos/Creditos.wav", -10.0f);
        }).start();
         
         
    
       
    }
    
    
    
     private void rellenarPokemos(){
        Partida datos=new Partida();
        String informacion= datos.LeerPartida("PARTIDAGUARDADA.txt");
        String pokemon= datos. obtValor(informacion,"Pokemon");
        DefaultComboBoxModel<String> model= (DefaultComboBoxModel<String>) Pokemo.getModel();
        model.removeAllElements();
        model.addElement(pokemon);
      
    }
     
     private void updatePokemonData(String selectedPokemon) {
        Partida datos=new Partida();
        String informacion= datos.LeerPartida("PARTIDAGUARDADA.txt");
      
        String pokemon= datos. obtValor(informacion,"Pokemon");
        String relacion =  datos. obtValor(informacion," Relacion");
        String estado =  datos. obtValor(informacion," Estado");

        if (selectedPokemon.equals(pokemon)) {
            Relacion.setText(relacion);
            Estado.setText(estado);
        }
    }


    
     
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new Fondo();
        lblEstadoAnimo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Estado = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        AVL = new javax.swing.JTextArea();
        out = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        Relacion = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Pokemo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Swis721 BlkCn BT", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 153));
        jLabel1.setText("Estado");

        Estado.setEnabled(false);

        AVL.setBackground(new java.awt.Color(226, 226, 136));
        AVL.setColumns(20);
        AVL.setFont(new java.awt.Font("Swis721 BT", 1, 12)); // NOI18N
        AVL.setForeground(new java.awt.Color(0, 0, 0));
        AVL.setRows(5);
        AVL.setBorder(javax.swing.BorderFactory.createTitledBorder("Regalos Recibidos"));
        AVL.setEnabled(false);
        jScrollPane1.setViewportView(AVL);

        out.setBackground(new java.awt.Color(153, 0, 0));
        out.setText("<");
        out.setBorder(null);
        out.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Swis721 BlkEx BT", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 255));
        jLabel2.setText("Relacion:");

        Relacion.setFont(new java.awt.Font("Lucida Console", 0, 18)); // NOI18N
        Relacion.setForeground(new java.awt.Color(0, 0, 0));

        jLabel3.setFont(new java.awt.Font("Swis721 BlkCn BT", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 204));
        jLabel3.setText("Pokemon");

        Pokemo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PokemoActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(102, 255, 0));
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(out, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Pokemo, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(2, 2, 2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Relacion, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(286, 286, 286)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Estado, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEstadoAnimo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(jLabel1))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(94, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Relacion, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(103, 103, 103))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(out, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(Pokemo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblEstadoAnimo, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 12, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void outActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outActionPerformed

       new Musica().Detener();
        this.dispose();
      
    }//GEN-LAST:event_outActionPerformed

    private void PokemoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PokemoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PokemoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        String Pokemonselecc = (String) Pokemo.getSelectedItem();
        updatePokemonData(Pokemonselecc);
        buscarArchivo("Respaldo");
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    
public void buscarArchivo(String pokemon) {
    File dir = new File(".");
    File[] archivos = dir.listFiles();

    
    
    if (archivos != null) {
        for (File archivo : archivos) {
            if (archivo.isFile()) {
                String nombreArchivo = archivo.getName();
                if (nombreArchivo.startsWith(pokemon) && nombreArchivo.endsWith(".txt")) {
                    System.out.println("Se encontró el archivo: " + archivo.getAbsolutePath());
                    
                     try {
                        BufferedReader reader = new BufferedReader(new FileReader(archivo));
                        String linea;
                        while ((linea = reader.readLine()) != null) {
                            System.out.println(linea);
                            AVL.append(linea+"\n");
                        }
                        reader.close();
                        
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                    
                    break;
                }
            }
                }
            }  
            AVL.append("");
     
        
        }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PokemonsAlmacenados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PokemonsAlmacenados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PokemonsAlmacenados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PokemonsAlmacenados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PokemonsAlmacenados().setVisible(true);
            }
        });
    }
    
    public final void actualizarImagenEstadoAnimo(int relacion) {
        // Determinar el estado de ánimo según la relación
       
        String estadoAnimo = obtenerEstadoAnimo(relacion);
        // Cargar la imagen correspondiente al estado de ánimo
        ImageIcon imagen = cargarImagenEstadoAnimo(estadoAnimo);
        // Actualizar la imagen del JLabel
        lblEstadoAnimo.setIcon(imagen);
    }
    
    public static String obtenerEstadoAnimo(int relacion) {
        // Determinar en qué rango se encuentra el valor de la relación
        if (relacion >= 0 && relacion < 2000) {
            return "Sigh";
        } else if (relacion >= 2000 && relacion < 4000) {
            return "Angry";
        } else if (relacion >= 4000 && relacion < 6000) {
            return "Normal";
        } else if (relacion >= 6000 && relacion < 8000) {
            return "Happy";
        } else if (relacion >= 8000 && relacion <= 10000) {
            return "Inspired";
        } else {
            // En caso de que el valor de la relación esté fuera de los rangos especificados
            return "Desconocido";
        }
    }
    
    private ImageIcon cargarImagenEstadoAnimo(String estadoAnimo) {
    // Cargar y devolver la imagen correspondiente al estado de ánimo
    switch (estadoAnimo) {
        case "Sigh":
            Estado.setText("Sigh");
            return new ImageIcon("src/Images/Icon/sigh.png");
        case "Angry":
            Estado.setText("Angry");
            return new ImageIcon("src/Images/Icon/angry.png");
        case "Normal":
            Estado.setText("Normal");
            return new ImageIcon("src/Images/Icon/normal.png");
        case "Happy":
            Estado.setText("Happy");
            return new ImageIcon("src/Images/Icon/happy.png");
        case "Inspired":
            Estado.setText("Inspired");
            return new ImageIcon("src/Images/Icon/inspired.png");
        default:
            // En caso de un estado de ánimo desconocido, devolver una imagen por defecto o null
            return null;
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AVL;
    private javax.swing.JTextField Estado;
    private javax.swing.JComboBox<String> Pokemo;
    private javax.swing.JLabel Relacion;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEstadoAnimo;
    private javax.swing.JButton out;
    // End of variables declaration//GEN-END:variables
class Fondo extends JPanel{
        private Image imagen;
        
        @Override
        public void paint(Graphics g){
            imagen= new ImageIcon(getClass().getResource("/Images/informacion.jpg")).getImage();
            g.drawImage(imagen,0,0,getWidth(),getHeight(),this);
                    setOpaque(false);
                    
                    super.paint(g);
        }
    }}
